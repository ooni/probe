# This is the configuration file for OONIProbe
# This file follows the YAML markup format: http://yaml.org/spec/1.2/spec.html
# Keep in mind that indentation matters.

basic:
    # Where OONIProbe should be writing its log file
    # logfile: ooniprobe.log
    # loglevel: WARNING
    # Will rotate logs daily when "daily" or based on rotate_length
    #  when "length" is set. null to disable rotation.
    # rotate: daily
    # rotate_length: 1M
    # Sets an upper bound on the number of rotated files, only works when
    #  "length" is the rotation mode
    # max_rotated_files: null
    # The maximum amount of data to store on disk. Once the quota is reached,
    # we will start deleting older reports.
    # measurement_quota: 1G
privacy:
    # Should we include the IP address of the probe in the report?
    includeip: false
    # Should we include the ASN of the probe in the report?
    includeasn: true
    # Should we include the country as reported by GeoIP in the report?
    includecountry: true
    # Should we collect a full packet capture on the client?
    includepcap: false
reports:
    # Should we place a unique ID inside of every report
    unique_id: true
    # This is a prefix for each packet capture file (.pcap) per test:
    pcap: null
    collector: null
advanced:
    debug: false
    # enable if auto detection fails
    #tor_binary: /usr/sbin/tor
    #obfsproxy_binary: /usr/bin/obfsproxy 
    # For auto detection
    interface: auto
    # Of specify a specific interface
    #interface: wlan0
    # If you do not specify start_tor, you will have to have Tor running and
    # explicitly set the control port and SOCKS port
    start_tor: true
    # After how many seconds we should give up on a particular measurement
    measurement_timeout: 120
    # After how many retries we should give up on a measurement
    measurement_retries: 2
    # How many measurements to perform concurrently
    measurement_concurrency: 4
    # After how may seconds we should give up reporting
    reporting_timeout: 360
    # After how many retries to give up on reporting
    reporting_retries: 5
    # How many reports to perform concurrently
    reporting_concurrency: 7
    # If we should support communicating to plaintext backends (via HTTP)
    insecure_backend: false
    # The preferred backend type, can be one of onion, https or cloudfront
    preferred_backend: onion
    # The port and address for the Web UI
    #webui_port: 8842
    #webui_address: "127.0.0.1"
    # Should the Web UI be disabled
    #disable_webui: false
tor:
    #socks_port: 8801
    #control_port: 8802
    # Alternatively set control_port to the unix domain socket. Useful for Debian based systems
    #control_port: unix:/var/run/tor/control
    #
    # Specify the absolute path to the Tor bridges to use for testing
    #bridges: bridges.list
    # Specify path of the tor datadirectory.
    # This should be set to something to avoid having Tor download each time
    # the descriptors and consensus data.
    #data_dir: ~/.tor/
    #
    # This is the timeout after which we consider to to not have
    # bootstrapped properly.
    timeout: 200
    torrc:
        #HTTPProxy: host:port
        #HTTPProxyAuthenticator: user:password
        #HTTPSProxy: host:port
        #HTTPSProxyAuthenticator: user:password
        #UseBridges: 1
        #Bridge:
        #- "meek_lite 0.0.2.0:1 url=https://d2cly7j4zqgua7.cloudfront.net/ front=a0.awsstatic.com"
        #- "meek_lite 0.0.2.0:2 url=https://meek.azureedge.net/ front=ajax.aspnetcdn.com"
        #ClientTransportPlugin: "meek_lite exec /usr/bin/obfs4proxy"
