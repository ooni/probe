.
.TH "ooniprobe" "1" "June 16, 2016" "1.5.1" "ooniprobe"
.SH NAME
ooniprobe - a network censorship measurement tool.
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..

.SH SYNOPSIS
.B ooniprobe
.RB [ \-hnspgN ]
.RB [ --version ]
.RB [ --spew ]
.RB [ \-o
.IR reportfile ]
.RB [ \-i
.IR testdeck ]
.RB [ \-c
.IR collector ]
.RB [ \-b
.IR bouncer ]
.RB [ \-l
.IR logfile ]
.RB [ \-O
.IR pcapfile ]
.RB [ \-f
.IR configfile ]
.RB [ \-d
.IR datadir ]
.RB [ \-a
.IR annotations]
.RB [ \-Q
.IR queue ]
.I "test_name"

.SH DESCRIPTION
.sp
ooniprobe is tool for performing internet censorship measurements. Our goal is
to achieve a common data format and set of methodologies for conducting
censorship related research.

.SH OPTIONS

.TP
.BR \-\^h " or " \-\-help
Display this help and exit.
.TP
.BR \-\^n " or " \-\-no\-collector
Disable reporting the net test results to an ooni-backend collector.
.TP
.BR \-\^N " or " \-\-no\-yamloo
Disable writing report file to disk.
.TP
.BR \-\^g " or " \-\-no\-geoip
Disable performing geoip lookup.
.TP
.BR \-\^s " or " \-\-list
List all of the available net tests.
.TP
.BR \-\^p " or " \-\-printdeck
Print to standard output the specified command line options as an ooniprobe test deck.
.TP
.BR \-\^o " or " \-\-reportfile
Specify the path to report file to write.
.TP
.BR \-\^i " or " \-\-testdeck
Specify as input a test deck: a yaml file containing the tests to run and their
arguments.
.TP
.BR \-\^c " or " \-\-collector
Specify the address of the collector of net test results. It is advisable to
always specify and bouncer and let it return a collector for the test or test
deck you are running.
.TP
.BR \-\^b " or " \-\-bouncer
Address of the bouncer that will inform the probe which collector to use and the
addresses of test helpers. Default: httpo://nkvphnp3p6agi5qq.onion
.TP
.BR \-\^l " or " \-\-logfile
Path to the log file to write
.TP
.BR \-\^O " or " \-\-pcapfile
Prefix to the pcap file name.
.TP
.BR \-\^f " or " \-\-configfile
Specify a path to the ooniprobe configuration file.
.TP
.BR \-\^d " or " \-\-datadir
Specify a path to the ooniprobe data directory
.TP
.BR \-\^a " or " \-\-annotations
Annotate the report with a key:value[, key:value] format.
.TP
.BR \-\-spew
Print an insanely verbose log of everything that happens.
Useful when debugging freezes or locks in complex code.
.TP
.BR \-\-version
Display the ooniprobe version and exit.
.TP
.BR \-\^Q " or " \-\-queue
AMQP Queue URL amqp://user:pass@host:port/vhost/queue

.SH OONIPROBE
.sp
Is the tool that volunteers and researchers interested in contributing data to
the project should be running.
.sp
ooniprobe allows the user to select what test should be run and what backend
should be used for storing the test report and/or assisting them in the running
of the test.
.sp
ooniprobe tests are divided into two categories: \fBTraffic Manipulation\fP and
\fBContent Blocking\fP\&.
.sp
\fBTraffic Manipulation\fP tests aim to detect the presence of some sort of
tampering with the internet traffic between the probe and a remote test helper
backend. As such they usually require the selection of an ooni-backend
component for running the test.
.sp
\fBContent Blocking\fP are aimed at enumerating the kind of content that is
blocked from the probes network point of view. As such they usually require to
have specified an input list for running the test.
.SS Threat Model
.sp
Our adversary is capable of doing country wide network surveillance and
manipulation of network traffic.
.sp
The goals of our adversary are:
.INDENT 0.0
.INDENT 3.5
.INDENT 0.0
.IP \(bu 2
Restrict access to certain content, while not degrading overall quality of
the network
.IP \(bu 2
Monitor the network in a way that they are able to identify misuse of it in
real time
.UNINDENT
.UNINDENT
.UNINDENT
.sp
More specific to the running of network filtering detection tests:
.INDENT 0.0
.IP 1. 3
Detect actors performing censorship detection tests
.IP 2. 3
Fool people running such tests into believing that the network is
unrestricted

.UNINDENT
.sp
\fINote\fP that while 2) => 1) it is not true that 1) => 2) as the identification of
such actors does not necessarily have to happen in real time.
While our intention is to minimize the risk of users running OONI probe to be
identified, this comes with a tradeoff in accuracy. It is therefore necessary in
certain tests to trade\-off fingerprintability in favour of tests accuracy.
.sp
This is why we divide tests based on what risk the user running it can face,
allowing the user to freely choose what threat model they wish to adhere to.
.SS Installation
.sp
\fBRead this before running ooniprobe!\fP
.sp
Running ooniprobe is a potentially risky activity. This greatly depends on the
jurisdiction in which you are in and which test you are running. It is
technically possible for a person observing your internet connection to be
aware of the fact that you are running ooniprobe. This means that if running
network measurement tests is something considered to be illegal in your country
then you could be spotted.
.sp
Furthermore, ooniprobe takes no precautions to protect the install target machine
from forensics analysis. If the fact that you have installed or used ooni
probe is a liability for you, please be aware of this risk.

You can run tests with:
.UNINDENT
.sp
\fIooniprobe blocking/web_connectivity \-u %\https://www.torproject.org\fP
.SS Using ooniprobe
.sp
\fBNet test\fP is a set of measurements to assess what kind of internet censorship is occurring.
.sp
\fBDecks\fP are collections of ooniprobe nettests with some associated inputs.
.sp
\fBCollector\fP is a service used to report the results of measurements.
.sp
\fBTest helper\fP is a service used by a probe for successfully performing its measurements.
.sp
\fBBouncer\fP is a service used to discover the addresses of test helpers and collectors.
.SS Configuring ooniprobe
.sp
You may edit the configuration for ooniprobe by editing the configuration file
found inside of \fI/etc/ooniprobe.conf\fP\&.
.sp
By default ooniprobe will not include personal identifying information in the
test result, nor create a pcap file. This behavior can be personalized.
.SS Running decks
.sp
You will find all the installed decks inside of \fI/usr/share/ooni/decks\fP\&.
.sp
You may then run a deck by using the command line option \fI\-i\fP:
.sp
As root:
.sp
\fIooniprobe \-i /usr/share/ooni/decks/complete.deck\fP
.sp
Or as a user:
.sp
\fIooniprobe \-i /usr/share/ooni/decks/complete_no_root.deck\fP
.sp
The above tests will require around 20\-30 minutes to complete depending on your network speed.
.sp
If you would prefer to run some faster tests you should run:
As root:
.sp
\fIooniprobe \-i /usr/share/ooni/decks/fast.deck\fP
.sp
Or as a user:
.sp
\fIooniprobe \-i /usr/share/ooni/decks/fast_no_root.deck\fP
.SS Running net tests
.sp
You may list all the installed stable net tests with:
.sp
\fIooniprobe \-s\fP
.sp
You may then run a nettest by specifying its name for example:
.sp
\fIooniprobe manipulation/http_header_field_manipulation\fP
.sp
It is also possible to specify inputs to tests as URLs:
.sp
\fIooniprobe blocking/web_connectivity \-f httpo://ihiderha53f36lsd.onion/input/37e60e13536f6afe47a830bfb6b371b5cf65da66d7ad65137344679b24fdccd1\fP
.sp
You can find the result of the test in your current working directory.
.sp
By default the report result will be collected by the default ooni collector
and the addresses of test helpers will be obtained from the default bouncer.
.sp
You may also specify your own collector or bouncer with the options \fI\-c\fP and
\fI\-b\fP\&.
.SS (Optional) Install obfs4proxy
.sp
\fIapt-get install obfs4proxy
.SS Bridges and obfsproxy bridges
.sp
ooniprobe submits reports to ooni-backend report collectors through Tor to a hidden
service endpoint. By default, ooniprobe uses the installed system Tor, but can
also be configured to launch Tor (see the advanced.start_tor option in
ooniprobe.conf), and ooniprobe supports bridges (and obfsproxy bridges, if
obfsproxy is installed). The tor.bridges option in ooniprobe.conf sets the path
to a file that should contain a set of "bridge" lines (of the same format as
used in torrc, and as returned by \fI\%https://bridges.torproject.org\fP). If obfsproxy
bridges are to be used, the path to the obfsproxy binary must be configured.
See option advanced.obfsproxy_binary, in ooniprobe.conf.
.SS Content Blocking Tests
.INDENT 0.0
.INDENT 3.5
.INDENT 0.0
.IP \(bu 2
\fI\%Bridge Reachability\fP
.IP \(bu 2
\fI\%DNS Consistency\fP
.IP \(bu 2
\fI\%HTTP Requests\fP
.IP \(bu 2
\fI\%Meek Fronted Requests\fP
.IP \(bu 2
\fI\%TCP Connect\fP
.IP \(bu 2
\fI\%Vanilla Tor\fP
.IP \(bu 2
\fI\%Web Connectivity\fP
.UNINDENT
.UNINDENT
.UNINDENT
.SS Traffic Manipulation Tests
.INDENT 0.0
.INDENT 3.5
.INDENT 0.0
.IP \(bu 2
\fI\%Captive Portal\fP
.IP \(bu 2
\fI\%HTTP Invalid Request Line\fP
.IP \(bu 2
\fI\%DNS Spoof\fP
.IP \(bu 2
\fI\%HTTP Header Field Manipulation\fP
.IP \(bu 2
\fI\%Traceroute\fP
.IP \(bu 2
\fI\%HTTP Host\fP
.UNINDENT
.UNINDENT
.UNINDENT
.SS Other tests
.sp
We also have some other tests that are currently not fully supported or still
being experimented with.
.sp
You can find these in:
.INDENT 0.0
.INDENT 3.5
.INDENT 0.0
.IP \(bu 2
\fI\%/usr/lib/python2.7/dist-packages/ooni/nettests/experimental\fP
.UNINDENT
.UNINDENT
.UNINDENT
.sp
Tests that don\(aqt do a measurement but are useful for scanning can be found in:
.INDENT 0.0
.INDENT 3.5
.INDENT 0.0
.IP \(bu 2
\fI\%/usr/lib/python2.7/dist-packages/ooni/nettests/scanning\fP
.UNINDENT
.UNINDENT
.UNINDENT
.sp
Tests that involve running third party tools may be found in:
.INDENT 0.0
.INDENT 3.5
.INDENT 0.0
.IP \(bu 2
\fI\%/usr/lib/python2.7/dist-packages/ooni/nettests/third_party\fP
.UNINDENT
.UNINDENT
.UNINDENT
.SS Reports
.sp
The reports collected by ooniprobe are stored on
\fI\%https://measurements.ooni.torproject.org/\fP

.SH GLOSSARY
.sp
Here we will summarize some of the jargon that is unique to OONI.
.sp
\fBTest Case\fP: a set of measurements performed on a to be tested network that
are logically grouped together
.sp
\fBReport\fP: is the output of a test run containing all the information that is
require for a researcher to assess what is the output of a test.
.sp
\fBYamlooni\fP: The format we use for Reports, that is based on YAML.
.sp
\fBInput\fP: What is given as input to a TestCase to perform a measurement.
.SH AUTHOR
The Tor Project
.SH COPYRIGHT
2016, The Tor Project
.
